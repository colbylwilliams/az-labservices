# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /LabPlans/put/putLabPlan
@try_manual
def step_labplan_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices labplan create '
             '--location "westus" '
             '--default-auto-shutdown-profile disconnect-delay="00:05" idle-delay="01:00" no-connect-delay="01:00" '
             'shutdown-on-disconnect="Enabled" shutdown-on-idle="UserAbsence" shutdown-when-not-connected="Enabled" '
             '--default-connection-profile client-rdp-access="Public" client-ssh-access="Public" web-rdp-access="None" '
             'web-ssh-access="None" '
             '--subnet-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Network/virtualNetw'
             'orks/{vn}/subnets/{subnets}" '
             '--shared-gallery-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Compute/gal'
             'leries/testsig" '
             '--support-info email="help@contoso.com" instructions="Contact support for help." phone="+1-202-555-0123" '
             'url="help.contoso.com" '
             '--name "{myLabPlan}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az labservices labplan wait --created '
             '--name "{myLabPlan}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LabPlans/get/getLabPlan
@try_manual
def step_labplan_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices labplan show '
             '--name "{myLabPlan}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LabPlans/get/listLabPlans
@try_manual
def step_labplan_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices labplan list '
             '-g ""',
             checks=checks)


# EXAMPLE: /LabPlans/get/listResourceGroupLabPlans
@try_manual
def step_labplan_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices labplan list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LabPlans/patch/patchLabPlan
@try_manual
def step_labplan_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices labplan update '
             '--default-connection-profile client-rdp-access="Public" client-ssh-access="Public" web-rdp-access="None" '
             'web-ssh-access="None" '
             '--name "{myLabPlan}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LabPlans/post/saveImageVirtualMachine
@try_manual
def step_labplan_save_image(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices labplan save-image '
             '--name "Test Image" '
             '--lab-virtual-machine-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.LabSer'
             'vices/labs/{myLab}/virtualMachines/{myVirtualMachine}" '
             '--lab-plan-name "{myLabPlan}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Images/put/putImage
@try_manual
def step_image_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices image create '
             '--enabled-state "Enabled" '
             '--name "{myImage}" '
             '--lab-plan-name "{myLabPlan}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Images/get/getImage
@try_manual
def step_image_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices image show '
             '--name "{myImage}" '
             '--lab-plan-name "{myLabPlan}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Images/get/listImages
@try_manual
def step_image_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices image list '
             '--lab-plan-name "{myLabPlan}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Images/patch/patchImage
@try_manual
def step_image_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices image update '
             '--enabled-state "Enabled" '
             '--name "{myImage}" '
             '--lab-plan-name "{myLabPlan}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Labs/put/putLab
@try_manual
def step_lab_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices lab create '
             '--location "westus" '
             '--description "This is a test lab." '
             '--auto-shutdown-profile disconnect-delay="00:05" idle-delay="01:00" no-connect-delay="01:00" '
             'shutdown-on-disconnect="Enabled" shutdown-on-idle="UserAbsence" shutdown-when-not-connected="Enabled" '
             '--connection-profile client-rdp-access="Public" client-ssh-access="Public" web-rdp-access="None" '
             'web-ssh-access="None" '
             '--lab-plan-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.LabServices/labPl'
             'ans/{myLabPlan}" '
             '--network-profile subnet-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Net'
             'work/virtualNetworks/{vn}/subnets/{subnets}" '
             '--open-access "Disabled" '
             '--title "Test Lab" '
             '--additional-capabilities install-gpu-drivers="Disabled" '
             '--admin-user username="test-user" '
             '--create-option "TemplateVM" '
             '--image-reference offer="WindowsServer" publisher="Microsoft" sku="2019-Datacenter" '
             'version="2019.0.20190410" '
             '--sku name="Medium" '
             '--usage-quota "10:00" '
             '--use-shared-password "Disabled" '
             '--name "{myLab}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az labservices lab wait --created '
             '--name "{myLab}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Labs/get/getLab
@try_manual
def step_lab_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices lab show '
             '--name "{myLab}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Labs/get/listLabs
@try_manual
def step_lab_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices lab list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Labs/get/listResourceGroupLabs
@try_manual
def step_lab_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices lab list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Labs/patch/patchLab
@try_manual
def step_lab_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices lab update '
             '--open-access "Enabled" '
             '--name "{myLab}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Labs/post/publishLab
@try_manual
def step_lab_publish(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices lab publish '
             '--name "{myLab}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Labs/post/syncLab
@try_manual
def step_lab_sync_group(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices lab sync-group '
             '--name "{myLab}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Schedules/put/putSchedule
@try_manual
def step_schedule_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices schedule create '
             '--notes "Schedule 1 for students" '
             '--recurrence-pattern expiration-date="2020-08-14" frequency="Daily" interval=2 '
             '--start-at "2020-05-26T12:00:00Z" '
             '--stop-at "2020-05-26T18:00:00Z" '
             '--time-zone-id "America/Los_Angeles" '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{mySchedule}"',
             checks=checks)


# EXAMPLE: /Schedules/get/getListSchedule
@try_manual
def step_schedule_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices schedule list '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Schedules/get/getSchedule
@try_manual
def step_schedule_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices schedule show '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{mySchedule}"',
             checks=checks)


# EXAMPLE: /Schedules/patch/patchSchedule
@try_manual
def step_schedule_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices schedule update '
             '--recurrence-pattern expiration-date="2020-08-14" frequency="Daily" interval=2 '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{mySchedule}"',
             checks=checks)


# EXAMPLE: /Schedules/delete/deleteSchedule
@try_manual
def step_schedule_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices schedule delete -y '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{mySchedule}"',
             checks=checks)


# EXAMPLE: /Labs/delete/deleteLab
@try_manual
def step_lab_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices lab delete -y '
             '--name "{myLab}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LabPlans/delete/deleteLabPlan
@try_manual
def step_labplan_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices labplan delete -y '
             '--name "{myLabPlan}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /OperationResults/get/getOperationResult
@try_manual
def step_operationresult_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices operationresult show '
             '--operation-result-id "a64149d8-84cb-4566-ab8e-b4ee1a074174"',
             checks=checks)


# EXAMPLE: /Skus/get/listSkus
@try_manual
def step_sku_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices sku list',
             checks=checks)


# EXAMPLE: /Usages/get/listUsages
@try_manual
def step_usage_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices usage list '
             '--location "westus2"',
             checks=checks)


# EXAMPLE: /Users/put/putUser
@try_manual
def step_user_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices user create '
             '--additional-usage-quota "20:00" '
             '--email "testuser@contoso.com" '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myUser}"',
             checks=[])
    test.cmd('az labservices user wait --created '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myUser}"',
             checks=checks)


# EXAMPLE: /Users/get/getUser
@try_manual
def step_user_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices user show '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myUser}"',
             checks=checks)


# EXAMPLE: /Users/get/listUser
@try_manual
def step_user_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices user list '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Users/patch/patchUser
@try_manual
def step_user_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices user update '
             '--additional-usage-quota "20:00" '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myUser}"',
             checks=checks)


# EXAMPLE: /Users/post/inviteUser
@try_manual
def step_user_invite(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices user invite '
             '--text "Invitation to lab testlab" '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myUser}"',
             checks=checks)


# EXAMPLE: /VirtualMachines/get/getVirtualMachine
@try_manual
def step_virtualmachine_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices virtualmachine show '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myVirtualMachine}"',
             checks=checks)


# EXAMPLE: /VirtualMachines/get/listVirtualMachine
@try_manual
def step_virtualmachine_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices virtualmachine list '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /VirtualMachines/post/redeployVirtualMachine
@try_manual
def step_virtualmachine_redeploy(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices virtualmachine redeploy '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myVirtualMachine}"',
             checks=checks)


# EXAMPLE: /VirtualMachines/post/reimageVirtualMachine
@try_manual
def step_virtualmachine_reimage(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices virtualmachine reimage '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myVirtualMachine}"',
             checks=checks)


# EXAMPLE: /VirtualMachines/post/resetPasswordVirtualMachine
@try_manual
def step_virtualmachine_reset_password(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices virtualmachine reset-password '
             '--password "example-password" '
             '--username "{myUser2}" '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myVirtualMachine}"',
             checks=checks)


# EXAMPLE: /VirtualMachines/post/startVirtualMachine
@try_manual
def step_virtualmachine_start(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices virtualmachine start '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myVirtualMachine}"',
             checks=checks)


# EXAMPLE: /VirtualMachines/post/stopVirtualMachine
@try_manual
def step_virtualmachine_stop(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices virtualmachine stop '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myVirtualMachine}"',
             checks=checks)


# EXAMPLE: /Users/delete/deleteUser
@try_manual
def step_user_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az labservices user delete -y '
             '--lab-name "{myLab}" '
             '--resource-group "{rg}" '
             '--name "{myUser}"',
             checks=checks)
