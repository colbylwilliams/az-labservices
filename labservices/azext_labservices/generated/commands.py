# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=bad-continuation

from azext_labservices.generated._client_factory import (cf_image, cf_lab,
                                                         cf_labplan,
                                                         cf_operationresult,
                                                         cf_schedule, cf_sku,
                                                         cf_usage, cf_user,
                                                         cf_virtualmachine)
from azure.cli.core.commands import CliCommandType

labservices_image = CliCommandType(
    operations_tmpl='azure.mgmt.labservices.operations._images_operations#imagesOperations.{}',
    client_factory=cf_image)


labservices_lab = CliCommandType(
    operations_tmpl='azure.mgmt.labservices.operations._labs_operations#labsOperations.{}',
    client_factory=cf_lab)


labservices_labplan = CliCommandType(
    operations_tmpl='azure.mgmt.labservices.operations._labplans_operations#labplansOperations.{}',
    client_factory=cf_labplan)


labservices_operationresult = CliCommandType(
    operations_tmpl='azure.mgmt.labservices.operations._operationresults_operations#operationresultsOperations.{}',
    client_factory=cf_operationresult)


labservices_schedule = CliCommandType(
    operations_tmpl='azure.mgmt.labservices.operations._schedules_operations#schedulesOperations.{}',
    client_factory=cf_schedule)


labservices_sku = CliCommandType(
    operations_tmpl='azure.mgmt.labservices.operations._skus_operations#skusOperations.{}',
    client_factory=cf_sku)


labservices_usage = CliCommandType(
    operations_tmpl='azure.mgmt.labservices.operations._usages_operations#usagesOperations.{}',
    client_factory=cf_usage)


labservices_user = CliCommandType(
    operations_tmpl='azure.mgmt.labservices.operations._users_operations#usersOperations.{}',
    client_factory=cf_user)


labservices_virtualmachine = CliCommandType(
    operations_tmpl='azure.mgmt.labservices.operations._virtualmachines_operations#virtualmachinesOperations.{}',
    client_factory=cf_virtualmachine)


def load_command_table(self, _):

    with self.command_group('labservices image', labservices_image, client_factory=cf_image) as g:
        g.custom_command('list', 'labservices_image_list')
        g.custom_show_command('show', 'labservices_image_show')
        g.custom_command('create', 'labservices_image_create')
        g.custom_command('update', 'labservices_image_update')

    with self.command_group('labservices lab', labservices_lab, client_factory=cf_lab) as g:
        g.custom_command('list', 'labservices_lab_list')
        g.custom_show_command('show', 'labservices_lab_show')
        g.custom_command('create', 'labservices_lab_create', supports_no_wait=True)
        g.custom_command('update', 'labservices_lab_update', supports_no_wait=True)
        g.custom_command('delete', 'labservices_lab_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('publish', 'labservices_lab_publish', supports_no_wait=True)
        g.custom_command('sync-group', 'labservices_lab_sync_group', supports_no_wait=True)
        g.custom_wait_command('wait', 'labservices_lab_show')

    with self.command_group('labservices labplan', labservices_labplan, client_factory=cf_labplan) as g:
        g.custom_command('list', 'labservices_labplan_list')
        g.custom_show_command('show', 'labservices_labplan_show')
        g.custom_command('create', 'labservices_labplan_create', supports_no_wait=True)
        g.custom_command('update', 'labservices_labplan_update', supports_no_wait=True)
        g.custom_command('delete', 'labservices_labplan_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('save-image', 'labservices_labplan_save_image', supports_no_wait=True)
        g.custom_wait_command('wait', 'labservices_labplan_show')

    with self.command_group('labservices operationresult', labservices_operationresult, client_factory=cf_operationresult) as g:
        g.custom_show_command('show', 'labservices_operationresult_show')

    with self.command_group('labservices schedule', labservices_schedule, client_factory=cf_schedule) as g:
        g.custom_command('list', 'labservices_schedule_list')
        g.custom_show_command('show', 'labservices_schedule_show')
        g.custom_command('create', 'labservices_schedule_create')
        g.custom_command('update', 'labservices_schedule_update')
        g.custom_command('delete', 'labservices_schedule_delete', supports_no_wait=True, confirmation=True)
        g.custom_wait_command('wait', 'labservices_schedule_show')

    with self.command_group('labservices sku', labservices_sku, client_factory=cf_sku) as g:
        g.custom_command('list', 'labservices_sku_list')

    with self.command_group('labservices usage', labservices_usage, client_factory=cf_usage) as g:
        g.custom_command('list', 'labservices_usage_list')

    with self.command_group('labservices user', labservices_user, client_factory=cf_user) as g:
        g.custom_command('list', 'labservices_user_list')
        g.custom_show_command('show', 'labservices_user_show')
        g.custom_command('create', 'labservices_user_create', supports_no_wait=True)
        g.custom_command('update', 'labservices_user_update', supports_no_wait=True)
        g.custom_command('delete', 'labservices_user_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('invite', 'labservices_user_invite', supports_no_wait=True)
        g.custom_wait_command('wait', 'labservices_user_show')

    with self.command_group('labservices virtualmachine', labservices_virtualmachine, client_factory=cf_virtualmachine) as g:
        g.custom_command('list', 'labservices_virtualmachine_list')
        g.custom_show_command('show', 'labservices_virtualmachine_show')
        g.custom_command('redeploy', 'labservices_virtualmachine_redeploy', supports_no_wait=True)
        g.custom_command('reimage', 'labservices_virtualmachine_reimage', supports_no_wait=True)
        g.custom_command('reset-password', 'labservices_virtualmachine_reset_password', supports_no_wait=True)
        g.custom_command('start', 'labservices_virtualmachine_start', supports_no_wait=True)
        g.custom_command('stop', 'labservices_virtualmachine_stop', supports_no_wait=True)
        g.custom_wait_command('wait', 'labservices_virtualmachine_show')

    with self.command_group('labservices', is_experimental=True):
        pass
